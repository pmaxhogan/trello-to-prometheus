# Builds on push to `main` **and** any Git tag that starts with `v` (e.g. v1.2.0)
# Pushes multiâ€‘architecture image (linux/amd64 + linux/arm64) to ghcr.io/<owner>/<repo>
# Tags:
#        - `latest`  (for pushes to main)
#        - `v*`      (exact Git tag, e.g. v1.2.0)
#        - `sha-<short>` for every commit (optional but handy for rollbacks)
# Uses Docker Buildx + cache for speedy rebuilds

name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write   # Needed to push to GHCR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # ------ Set up Buildx (QEMU gives us multi-arch) --------------------
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      # ------ Log in to GitHub Container Registry ------------------------
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ------ Docker metadata (generates tags/labels) --------------------
      - name: Extract metadata for image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            # Tag = latest for main
            type=raw,value=latest,enable={{is_default_branch}}
            # Tag = v* for git tag
            type=ref,event=tag
            # Tag = sha short for every commit
            type=sha,prefix=sha-

      # ------ Build & push ------------------------------------------------
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Optional build cache for faster CI
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      # ------ Summary -----------------------------------------------------
      - name: Image digest
        run: |
          echo "Image pushed: ${{ steps.meta.outputs.tags }}"